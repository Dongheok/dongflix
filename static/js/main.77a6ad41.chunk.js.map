{"version":3,"sources":["theme/index.jsx","layout/header/styles.jsx","layout/header/index.jsx","layout/index.jsx","pages/movie/styles.jsx","api.js","pages/movie/viewLogic.jsx","pages/poster/styles.jsx","pages/poster/index.jsx","components/section/styles.jsx","components/section/index.jsx","components/loader/styles.jsx","components/loader/index.jsx","pages/message/styles.jsx","pages/message/index.jsx","pages/movie/index.jsx","pages/tv/styles.jsx","pages/tv/viewLogic.jsx","pages/tv/index.jsx","pages/search/styles.jsx","pages/search/index.jsx","pages/detail/styles.jsx","pages/detail/index.jsx","Routes.jsx","redux/reducer.jsx","redux/redux.jsx","App.js","index.js"],"names":["theme","main","Icon","styled","span","props","iconUrl","coverUrl","Wrapper","div","data","key","value","icon","cover","Header","TabValue","Content","useState","currentIndex","setCurrentIndex","currentItem","changeItem","useTabs","map","x","index","onClick","className","to","Layout","api","axios","create","baseURL","interceptors","request","use","config","params","movieApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","useLogic","state","setState","movieFunction","a","loading","nowPlaying","upComing","popular","results","error","useEffect","Image","bgUrl","Poster","imageUrl","title","rating","year","isMovie","star_rating","Grid","length","substring","style","width","Section","children","container","Loader","LinearProgress","Message","text","Movie","Helmet","item","original_title","poster_path","vote_average","release_date","tvFunction","topRated","airingToday","Tv","original_name","first_air_date","Search","movieResult","tvResult","searchTerm","searchByTerm","movieResults","tvResults","onSubmit","event","preventDefault","type","placeholder","onChange","e","target","Backdrop","Detail","result","youtubeSw","setYoutubeSw","location","pathname","includes","isTv","history","useHistory","parsedId","parseInt","match","isNaN","push","console","log","detailFunction","backdrop_path","src","alt","alignItems","genres","name","runtime","episode_run_time","href","homepage","overview","videos","allow","Routes","useSelector","reducer","path","exact","component","from","isLoading","appReducer","combineReducers","payload","routeName","store","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"oRAAaA,EAAQ,CACnBC,KAAM,Q,m8CCCD,IAAMC,EAAOC,IAAOC,KAAV,KAQG,SAACC,GAAD,sCAAoCA,EAAMC,YASxC,SAACD,GAAD,sCAAoCA,EAAME,aAMnDC,EAAUL,IAAOM,IAAV,KCrBdC,EAAO,CACX,CACEC,IAAK,SACLC,MAAO,QACPC,KAAM,iBACNC,MAAO,oBAET,CAAEH,IAAK,MAAOC,MAAO,KAAMC,KAAM,cAAeC,MAAO,iBACvD,CACEH,IAAK,UACLC,MAAO,SACPC,KAAM,kBACNC,MAAO,sBAyCIC,EA9BA,WAAO,IAAD,EAPL,SAACC,EAAUC,GAAa,IAAD,EACGC,mBAASF,GADZ,mBAC9BG,EAD8B,KAChBC,EADgB,KAErC,MAAO,CACLC,YAAaJ,EAAQE,GACrBG,WAAYF,GAIsBG,CAAQ,EAAGb,GAAvCW,EADW,EACXA,YAAaC,EADF,EACEA,WAErB,OACE,kBAACd,EAAD,KACE,4BACGE,EAAKc,KAAI,SAACC,EAAGC,GACZ,OACE,wBACEf,IAAKe,EACLC,QAAS,WACPL,EAAWI,IAEbE,UAAWP,EAAYT,QAAUa,EAAEb,MAAQ,KAAO,IAElD,kBAAC,IAAD,CAAMiB,GAAE,UAAKJ,EAAEd,MACb,kBAACT,EAAD,CACEI,QAASmB,EAAEZ,KACXN,SAAUkB,EAAEX,MACZc,UAAU,iBCnCbE,EARA,WACb,OACE,oCACE,kBAAC,EAAD,Q,yhDCJN,IAwFetB,EAxFCL,IAAOM,IAAV,K,iDCAPsB,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,kCAEXH,EAAII,aAAaC,QAAQC,KAAI,SAACC,GAI5B,OAHAA,EAAOC,OAASD,EAAOC,QAAU,GACjCD,EAAOC,OAAP,QAA2B,mCAC3BD,EAAOC,OAAP,SAA4B,QACrBD,KAGF,IAAME,EACC,kBAAMT,EAAIU,IAAI,sBADfD,EAED,kBAAMT,EAAIU,IAAI,mBAFbD,EAGF,kBAAMT,EAAIU,IAAI,kBAHZD,EAIE,SAACE,GAAD,OACXX,EAAIU,IAAJ,gBAAiBC,GAAM,CACrBH,OAAQ,CACNI,mBAAoB,aAPfH,EAUH,SAACI,GAAD,OACNb,EAAIU,IAAI,gBAAiB,CACvBF,OAAQ,CACNM,MAAOC,mBAAmBF,OAKrBG,EACD,kBAAMhB,EAAIU,IAAI,iBADbM,EAEF,kBAAMhB,EAAIU,IAAI,eAFZM,EAGE,kBAAMhB,EAAIU,IAAI,oBAHhBM,EAID,SAACL,GAAD,OACRX,EAAIU,IAAJ,aAAcC,GAAM,CAClBH,OAAQ,CACNI,mBAAoB,YAPfI,EAUH,SAACH,GAAD,OACNb,EAAIU,IAAI,aAAc,CACpBF,OAAQ,CACNM,MAAOC,mBAAmBF,OCdnBI,EA1BE,SAACC,EAAOC,GACvB,IAAMC,EAAa,uCAAG,gCAAAC,EAAA,6DACpBF,EAAS,2BACJD,GADG,IAENI,SAAS,KAHS,kBAMOb,IANP,cAMZc,EANY,gBAOKd,IAPL,cAOZe,EAPY,iBAQIf,IARJ,QAQZgB,EARY,OASlBN,EAAS,2BACJD,GADG,IAENK,WAAYA,EAAW5C,KAAK+C,QAC5BF,SAAUA,EAAS7C,KAAK+C,QACxBD,QAASA,EAAQ9C,KAAK+C,QACtBJ,SAAS,KAdO,kDAiBlBH,EAAS,2BAAKD,GAAN,IAAaS,MAAO,iCAjBV,0DAAH,qDAoBnBC,qBAAU,WACRR,MACC,K,mgECxBE,IAAMS,EAAQzD,IAAOM,IAAV,KACE,SAACJ,GAAD,gBAAcA,EAAMwD,UAI3BrD,EAAUL,IAAOM,IAAV,KCiCLqD,EAnCA,SAAC,GAA4D,IAA1DpB,EAAyD,EAAzDA,GAAIqB,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,KAA4B,IAAtBC,eAAsB,SACrEC,EAAuB,GAATH,EAClB,OACE,kBAAC,IAAD,CAAMpC,GAAIsC,EAAO,iBAAazB,GAAb,cAA2BA,IAC1C,kBAAC,EAAD,KACE,kBAAC2B,EAAA,EAAD,CAAMzC,UAAU,cACd,kBAACgC,EAAD,CACEC,MACEE,EAAQ,yCAC8BA,GAClC,gCAENnC,UAAU,SAEV,kBAACyC,EAAA,EAAD,CAAMzC,UAAU,YACd,wBAAIA,UAAU,SACXoC,EAAMM,OAAS,GAAf,UAAuBN,EAAMO,UAAU,EAAG,IAA1C,OAAqDP,GAExD,uBAAGpC,UAAU,QAAQsC,IAEvB,0BAAMtC,UAAU,UACd,0BAAMA,UAAU,QACd,0BACEA,UAAU,aACV4C,MAAO,CAAEC,MAAM,GAAD,OAAKL,EAAL,e,mNC3BhC,IAWe5D,EAXCL,IAAOM,IAAV,KCWEiE,EATC,SAAC,GAAyB,IAAvBV,EAAsB,EAAtBA,MAAOW,EAAe,EAAfA,SACxB,OACE,kBAAC,EAAD,KACE,4BAAKX,GACL,kBAACK,EAAA,EAAD,CAAMO,WAAS,GAAED,K,mUCNvB,IAeenE,EAfCL,IAAOM,IAAV,K,SCaEoE,EAXA,WACb,OACE,kBAAC,EAAD,KACE,oCACE,kBAACC,EAAA,EAAD,CAAgBlD,UAAU,gBAC1B,kBAACyC,EAAA,EAAD,CAAMzC,UAAU,mB,+PCPxB,IAaepB,GAbCL,IAAOM,IAAV,MCSEsE,GARC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,kBAAC,GAAD,KACE,4BAAKA,KC0FIC,GArFD,WAAO,IAAD,EACQ/D,mBAAS,CACjCoC,WAAY,GACZC,SAAU,GACVC,QAAS,GACTE,MAAO,KACPL,SAAS,IANO,mBACXJ,EADW,KACJC,EADI,KAUlB,OAFAF,EAASC,EAAOC,GAGd,kBAAC,EAAD,KACE,kBAACgC,EAAA,EAAD,KACE,qDAEDjC,EAAMI,QACL,oCACE,kBAAC,EAAD,MACA,kBAAC6B,EAAA,EAAD,KACE,sDAIJ,kBAACb,EAAA,EAAD,CAAMzC,UAAU,YACbqB,EAAMK,YAAcL,EAAMK,WAAWgB,OAAS,GAC7C,kBAAC,EAAD,CAASN,MAAM,eACZf,EAAMK,WAAW9B,KAAI,SAACC,EAAGC,GACxB,OACE,kBAAC2C,EAAA,EAAD,CAAMc,MAAI,EAACvD,UAAU,cAAcjB,IAAKc,EAAEiB,IACxC,kBAAC,EAAD,CACEA,GAAIjB,EAAEiB,GACNsB,MAAOvC,EAAE2D,eACTrB,SAAUtC,EAAE4D,YACZpB,OAAQxC,EAAE6D,aACVpB,KAAMzC,EAAE8D,aAAahB,UAAU,EAAG,GAClCJ,SAAS,SAOpBlB,EAAMM,UAAYN,EAAMM,SAASe,OAAS,GACzC,kBAAC,EAAD,CAASN,MAAM,mBACZf,EAAMM,SAAS/B,KAAI,SAACC,EAAGC,GACtB,OACE,kBAAC2C,EAAA,EAAD,CAAMc,MAAI,EAACvD,UAAU,cAAcjB,IAAKc,EAAEiB,IACxC,kBAAC,EAAD,CACEA,GAAIjB,EAAEiB,GACNsB,MAAOvC,EAAE2D,eACTrB,SAAUtC,EAAE4D,YACZpB,OAAQxC,EAAE6D,aACVpB,KAAMzC,EAAE8D,aAAahB,UAAU,EAAG,GAClCJ,SAAS,SAOpBlB,EAAMO,SAAWP,EAAMO,QAAQc,OAAS,GACvC,kBAAC,EAAD,CAASN,MAAM,kBACZf,EAAMO,QAAQhC,KAAI,SAACC,EAAGC,GACrB,OACE,kBAAC2C,EAAA,EAAD,CAAMc,MAAI,EAACvD,UAAU,cAAcjB,IAAKc,EAAEiB,IACxC,kBAAC,EAAD,CACEA,GAAIjB,EAAEiB,GACNsB,MAAOvC,EAAE2D,eACTrB,SAAUtC,EAAE4D,YACZpB,OAAQxC,EAAE6D,aACVpB,KAAMzC,EAAE8D,aAAahB,UAAU,EAAG,GAClCJ,SAAS,UASxBlB,EAAMS,OAAS,kBAAC,GAAD,CAASsB,KAAM/B,EAAMS,U,khDCzF3C,IAwFelD,GAxFCL,IAAOM,IAAV,MC4BEuC,GA3BE,SAACC,EAAOC,GACvB,IAAMsC,EAAU,uCAAG,gCAAApC,EAAA,6DACjBF,EAAS,2BACJD,GADG,IAENI,SAAS,KAHM,kBAMQN,IANR,cAMT0C,EANS,gBAOO1C,IAPP,cAOTS,EAPS,iBAQWT,IARX,QAQT2C,EARS,OASfxC,EAAS,2BACJD,GADG,IAENwC,SAAUA,EAAS/E,KAAK+C,QACxBD,QAASA,EAAQ9C,KAAK+C,QACtBiC,YAAaA,EAAYhF,KAAK+C,QAC9BJ,SAAS,KAdI,kDAiBfH,EAAS,2BAAKD,GAAN,IAAaS,MAAO,iCAjBb,0DAAH,qDAqBhBC,qBAAU,WACR6B,MACC,KCsEUG,GAtFJ,WAAO,IAAD,EACWzE,mBAAS,CACjCuE,SAAU,GACVjC,QAAS,GACTkC,YAAa,GACbhC,MAAO,KACPL,SAAS,IANI,mBACRJ,EADQ,KACDC,EADC,KAWf,OAFAF,GAASC,EAAOC,GAGd,kBAAC,GAAD,KACE,kBAACgC,EAAA,EAAD,KACE,kDAEDjC,EAAMI,QACL,oCACE,kBAAC,EAAD,MACA,kBAAC6B,EAAA,EAAD,KACE,mDAIJ,kBAACb,EAAA,EAAD,CAAMzC,UAAU,YACbqB,EAAMwC,UAAYxC,EAAMwC,SAASnB,OAAS,GACzC,kBAAC,EAAD,CAASN,MAAM,aACZf,EAAMwC,SAASjE,KAAI,SAACC,EAAGC,GACtB,OACE,kBAAC2C,EAAA,EAAD,CAAMc,MAAI,EAACvD,UAAU,cAAcjB,IAAKc,EAAEiB,IACxC,kBAAC,EAAD,CACEA,GAAIjB,EAAEiB,GACNsB,MAAOvC,EAAEmE,cACT7B,SAAUtC,EAAE4D,YACZpB,OAAQxC,EAAE6D,aACVpB,KAAMzC,EAAEoE,eAAetB,UAAU,EAAG,GACpCJ,SAAS,SAOpBlB,EAAMO,SAAWP,EAAMO,QAAQc,OAAS,GACvC,kBAAC,EAAD,CAASN,MAAM,cACZf,EAAMO,QAAQhC,KAAI,SAACC,EAAGC,GACrB,OACE,kBAAC2C,EAAA,EAAD,CAAMc,MAAI,EAACvD,UAAU,cAAcjB,IAAKc,EAAEiB,IACxC,kBAAC,EAAD,CACEA,GAAIjB,EAAEiB,GACNsB,MAAOvC,EAAEmE,cACT7B,SAAUtC,EAAE4D,YACZpB,OAAQxC,EAAE6D,aACVpB,KAAMzC,EAAEoE,eAAetB,UAAU,EAAG,GACpCJ,SAAS,SAOpBlB,EAAMyC,aAAezC,EAAMyC,YAAYpB,OAAS,GAC/C,kBAAC,EAAD,CAASN,MAAM,mBACZf,EAAMyC,YAAYlE,KAAI,SAACC,EAAGC,GACzB,OACE,kBAAC2C,EAAA,EAAD,CAAMc,MAAI,EAACvD,UAAU,cAAcjB,IAAKc,EAAEiB,IACxC,kBAAC,EAAD,CACEA,GAAIjB,EAAEiB,GACNsB,MAAOvC,EAAEmE,cACT7B,SAAUtC,EAAE4D,YACZpB,OAAQxC,EAAE6D,aACVpB,KAAMzC,EAAEoE,eAAetB,UAAU,EAAG,GACpCJ,SAAS,UASxBlB,EAAMS,OAAS,kBAAC,GAAD,CAASsB,KAAM/B,EAAMS,U,k3DC1F3C,IAwGelD,GAxGCL,IAAOM,IAAV,MC+HEqF,GAvHA,WAAO,IAAD,EACO5E,mBAAS,CACjC6E,YAAa,KACbC,SAAU,KACVC,WAAY,OACZvC,MAAO,KACPL,SAAS,IANQ,mBACZJ,EADY,KACLC,EADK,KASbgD,EAAY,uCAAG,8BAAA9C,EAAA,6DACnBF,EAAS,2BAAKD,GAAN,IAAaI,SAAS,KADX,kBAGQb,EAAgBS,EAAMgD,YAH9B,cAGbE,EAHa,gBAIKpD,EAAaE,EAAMgD,YAJxB,OAIbG,EAJa,OAKjBlD,EAAS,2BACJD,GADG,IAEN8C,YAAY,aAAKI,EAAazF,KAAK+C,SACnCuC,SAAS,aAAKI,EAAU1F,KAAK+C,SAC7BJ,SAAS,KATM,kDAYjBH,EAAS,2BAAKD,GAAN,IAAaS,MAAO,yBAZX,0DAAH,qDA0BlB,OACE,kBAAC,GAAD,KACE,kBAACwB,EAAA,EAAD,KACE,qDAEF,0BAAMmB,SAfa,SAACC,GACtBA,EAAMC,iBACmB,KAArBtD,EAAMgD,YACRC,KAYgCtE,UAAU,eACxC,2BACE4E,KAAK,OACLC,YAAY,+BACZC,SAZe,SAACC,GACtBzD,EAAS,2BAAKD,GAAN,IAAagD,WAAYU,EAAEC,OAAOhG,aAcxC,kBAACyD,EAAA,EAAD,CAAMzC,UAAU,YACbqB,EAAMI,QACL,oCACE,kBAAC,EAAD,MACA,kBAAC6B,EAAA,EAAD,KACE,sDAIJ,oCACGjC,EAAM8C,aAAe9C,EAAM8C,YAAYzB,OAAS,GAC/C,kBAAC,EAAD,CAASN,MAAM,iBACZf,EAAM8C,YAAYvE,KAAI,SAACC,EAAGC,GACzB,OACE,kBAAC2C,EAAA,EAAD,CAAMc,MAAI,EAACvD,UAAU,cAAcjB,IAAKc,EAAEiB,IACxC,kBAAC,EAAD,CACEA,GAAIjB,EAAEiB,GACNsB,MAAOvC,EAAE2D,eACTrB,SAAUtC,EAAE4D,YACZpB,OAAQxC,EAAE6D,aACVpB,KACEzC,GACAA,EAAE8D,cACF9D,EAAE8D,aAAahB,UAAU,EAAG,IAC5B9C,EAAE8D,aAAahB,UAAU,EAAG,GAE9BJ,SAAS,SAOpBlB,EAAM+C,UAAY/C,EAAM+C,SAAS1B,OAAS,GACzC,kBAAC,EAAD,CAASN,MAAM,cACZf,EAAM+C,SAASxE,KAAI,SAACC,EAAGC,GACtB,OACE,kBAAC2C,EAAA,EAAD,CAAMc,MAAI,EAACvD,UAAU,cAAcjB,IAAKc,EAAEiB,IACxC,kBAAC,EAAD,CACEA,GAAIjB,EAAEiB,GACNsB,MAAOvC,EAAEmE,cACT7B,SAAUtC,EAAE4D,YACZpB,OAAQxC,EAAE6D,aAEVpB,KACEzC,GACAA,EAAEoE,gBACFpE,EAAEoE,eAAetB,UAAU,EAAG,GAC1B9C,EAAEoE,eAAetB,UAAU,EAAG,GAC9B,YAENJ,SAAS,UASxBlB,EAAMS,OAAS,kBAAC,GAAD,CAASsB,KAAM/B,EAAMS,QACpCT,EAAM8C,aACL9C,EAAM+C,UACuB,IAA7B/C,EAAM8C,YAAYzB,QACQ,IAA1BrB,EAAM+C,SAAS1B,QACb,kBAAC,GAAD,CAASU,KAAI,0BAAqB/B,EAAMgD,iB,qkJCxH7C,IAAMY,GAAW1G,IAAOM,IAAV,MAKD,SAACJ,GAAD,gBAAcA,EAAMwD,UAI3BrD,GAAUL,IAAOM,IAAV,MCqKLqG,GApKA,SAACzG,GAAW,IAAD,EACGa,mBAAS,CAChC6F,OAAQ,KACRrD,MAAO,KACPL,SAAS,EACTY,OAAQ,OALY,mBAChBhB,EADgB,KACTC,EADS,OAOWhC,oBAAS,GAPpB,mBAOhB8F,EAPgB,KAOLC,EAPK,KAQjB9C,EAAU9D,EAAM6G,SAASC,SAASC,SAAS,WAC3CC,EAAOhH,EAAM6G,SAASC,SAASC,SAAS,QACxCE,EAAUC,cACVC,EAAWC,SAASpH,EAAMqH,MAAMnF,OAAOG,IA6B7C,OA5BIiF,MAAMH,IACPF,EAAQM,KAAK,KAEhBjE,qBAAU,YACa,uCAAG,gCAAAP,EAAA,yDAChB2D,EAAS,KACb7D,EAAS,2BAAKD,GAAN,IAAaI,SAAS,KAFV,UAIbc,EAJa,iCAKQ3B,EAAqBgF,GAL7B,OAKRpF,EALQ,OAMd2E,EAAS3E,EAAQ1B,KANH,4BAON2G,EAPM,kCAQQtE,EAAeyE,GARvB,QAQRpF,EARQ,OASd2E,EAAS3E,EAAQ1B,KATH,QAWjBmH,QAAQC,IAAIf,GAXK,kDAajB7D,EAAS,2BAAKD,GAAN,IAAaS,MAAO,0BAbX,QAepBR,EAAS,2BACHD,GADE,IAELI,SAAS,EACT0D,SACA9C,OAAQ8C,GAAUA,EAAOzB,cAAgByB,EAAOzB,gBAnB/B,0DAAH,qDAsBpByC,KACA,IAEA,oCACG,kBAAC7C,EAAA,EAAD,KACG,qDAEFjC,EAAMI,QACJ,oCACG,kBAAC,EAAD,MACA,kBAAC6B,EAAA,EAAD,KACG,sDAGLjC,EAAMS,MACP,kBAAC,GAAD,CAASsB,KAAM/B,EAAMS,QAErB,kBAAC,GAAD,KACG,kBAACmD,GAAD,CACGhD,MACGZ,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAOiB,cAAtC,6CAC2C/E,EAAM8D,OAAOiB,eACnD,kCAGX,kBAAC3D,EAAA,EAAD,CAAMO,WAAS,EAAChD,UAAU,UACvB,yBACGqG,IACGhF,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAO1B,YAAtC,6CAC2CpC,EAAM8D,OAAO1B,aACnD,gCAER6C,IAAI,SACJtG,UAAU,WAEb,kBAACyC,EAAA,EAAD,CAAMzC,UAAU,QACb,kBAACyC,EAAA,EAAD,CAAMO,WAAS,EAACuD,WAAW,UACxB,kBAAC9D,EAAA,EAAD,CAAMc,MAAI,GACP,4BACIlC,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAO3B,gBAAkBnC,EAAM8D,OAAO3B,eACrEnC,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAOnB,eAAiB3C,EAAM8D,OAAOnB,eAExE,4BACG,8BACI3C,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAOqB,QAAUnF,EAAM8D,OAAOqB,OAAO,IAAMnF,EAAM8D,OAAOqB,OAAO,GAAGC,KAC7FpF,EAAM8D,OAAOqB,OAAO,GAAGC,KACvB,aAYR,8BACIpF,GACEA,EAAM8D,QACN9D,EAAM8D,OAAOxB,cACbtC,EAAM8D,OAAOxB,aAAahB,UAAU,EAAG,IACvCtB,EAAM8D,OAAOxB,aAAahB,UAAU,EAAG,GACzCtB,GACEA,EAAM8D,QACN9D,EAAM8D,OAAOlB,gBACb5C,EAAM8D,OAAOlB,eAAetB,UAAU,EAAG,IACzCtB,EAAM8D,OAAOlB,eAAetB,UAAU,EAAG,IAE/C,8BACItB,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAOuB,SAAWrF,EAAM8D,OAAOuB,QAC9DrF,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAOwB,kBAAoBtF,EAAM8D,OAAOwB,iBAF3E,WAKA,0BAAM3G,UAAU,UACZqB,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAOzB,cACpC,0BAAM1D,UAAU,QACb,0BAAMA,UAAU,aAAa4C,MAAO,CAAEC,MAAM,GAAD,OAAoB,GAAfxB,EAAMgB,OAAX,WAKvD,uBACGuE,KAAMvF,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAO0B,SAAtC,UAAoDxF,EAAM8D,OAAO0B,UAAa,IACpF7B,OAAO,SACPhF,UAAU,UAHb,eAOA,2BAAIqB,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAO2B,UAAYzF,EAAM8D,OAAO2B,UAClEzF,GAASA,EAAM8D,QAAU9D,EAAM8D,OAAO4B,QACpC,kBAACtE,EAAA,EAAD,CAAMzC,UAAWoF,EAAY,aAAe,WACzC,4BACGR,KAAK,SACL7E,QAAS,WACNsF,GAAcD,MAGpB,kBAAC3C,EAAA,EAAD,CAAMzC,UAAU,eACb,4BACGoC,MAAM,UACNiE,IACGhF,GACAA,EAAM8D,QACN9D,EAAM8D,OAAO4B,QACb1F,EAAM8D,OAAO4B,OAAOlF,SACpBR,EAAM8D,OAAO4B,OAAOlF,QAAQ,IAC5BR,EAAM8D,OAAO4B,OAAOlF,QAAQ,GAAG9C,KAL/B,wCAMiCsC,EAAM8D,OAAO4B,OAAOlF,QAAQ,GAAG9C,KAEnEiI,MAAM,qFC1H9BC,GArBA,WACGC,aAAY,SAAC7F,GAAD,OAAWA,EAAM8F,WAE7C,OACE,kBAAC,IAAD,CAAe/I,MAAOA,GACpB,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgJ,KAAK,IAAIC,OAAK,EAACC,UAAWjE,KACjC,kBAAC,IAAD,CAAO+D,KAAK,SAASC,OAAK,EAACC,UAAWjE,KACtC,kBAAC,IAAD,CAAO+D,KAAK,MAAMC,OAAK,EAACC,UAAWvD,KACnC,kBAAC,IAAD,CAAOqD,KAAK,UAAUE,UAAWpD,KACjC,kBAAC,IAAD,CAAOkD,KAAK,aAAaE,UAAWpC,KACpC,kBAAC,IAAD,CAAOkC,KAAK,UAAUE,UAAWpC,KAEjC,kBAAC,IAAD,CAAUqC,KAAK,IAAItH,GAAG,e,SCjC1BkH,GAAU,CACdK,WAAW,GCKPC,GAAaC,aAAgB,CACjCP,QDHa,WAAoD,IAAnD9F,EAAkD,uDAA1C8F,GAA0C,yCAA/BvC,EAA+B,EAA/BA,KAAM+C,EAAyB,EAAzBA,QAAyB,EAAhBC,UAChD,OAAQhD,GACN,IAAK,iBACH,OAAO,2BAAKvD,GAAZ,IAAmBmG,UAAWG,IAEhC,QACE,OAAOtG,MCAAwG,GAAQC,aAAYL,ICKlBM,GARH,WACV,OACE,kBAAC,IAAD,CAAUF,MAAOA,IACf,kBAAC,GAAD,Q,4BCENG,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.77a6ad41.chunk.js","sourcesContent":["export const theme = {\r\n  main: \"#000\",\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Icon = styled.span`\r\n  display: inline-block;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 24px;\r\n  height: 24px;\r\n  background: url(${(props) => `/dongflix/images/icon/${props.iconUrl}`});\r\n  background-size: 24px;\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 0px;\r\n    height: 24px;\r\n    background: url(${(props) => `/dongflix/images/icon/${props.coverUrl}`});\r\n    background-size: 24px;\r\n    transition: all 0.4s;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index:2000;\r\n  background: rgba(20, 20, 20, 1);\r\n  & ul {\r\n    overflow: hidden;\r\n    background: rgba(20, 20, 20, 1);\r\n    & li {\r\n      &:nth-child(1) {\r\n        float: left;\r\n      }\r\n      &:nth-child(2) {\r\n        float: left;\r\n      }\r\n      &:nth-child(3) {\r\n        float: right;\r\n      }\r\n      & a {\r\n        position: relative;\r\n        display: block;\r\n        width: 80px;\r\n        height: 60px;\r\n        color: #fff;\r\n        text-align: center;\r\n        /* &::before {\r\n          content: \"\";\r\n          position: absolute;\r\n          left: 0;\r\n          bottom: 0;\r\n          width: 0;\r\n          height: 4px;\r\n          background: #27ad60;\r\n          transition: all 0.4s ease;\r\n        } */\r\n      }\r\n      /* &.On a::before {\r\n        width: 100%;\r\n      } */\r\n      &.On a .Icon::before {\r\n        width: 24px;\r\n      }\r\n    }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Wrapper, Icon } from \"./styles\";\r\n\r\nconst data = [\r\n  {\r\n    key: \"/movie\",\r\n    value: \"Movie\",\r\n    icon: \"movie_icon.png\",\r\n    cover: \"movie_icon_c.png\",\r\n  },\r\n  { key: \"/tv\", value: \"TV\", icon: \"tv_icon.png\", cover: \"tv_icon_c.png\" },\r\n  {\r\n    key: \"/search\",\r\n    value: \"Search\",\r\n    icon: \"search_icon.png\",\r\n    cover: \"search_icon_c.png\",\r\n  },\r\n];\r\n\r\nconst useTabs = (TabValue, Content) => {\r\n  const [currentIndex, setCurrentIndex] = useState(TabValue);\r\n  return {\r\n    currentItem: Content[currentIndex],\r\n    changeItem: setCurrentIndex,\r\n  };\r\n};\r\nconst Header = () => {\r\n  const { currentItem, changeItem } = useTabs(0, data);\r\n  // useContext로 currentPage 관리하기\r\n  return (\r\n    <Wrapper>\r\n      <ul>\r\n        {data.map((x, index) => {\r\n          return (\r\n            <li\r\n              key={index}\r\n              onClick={() => {\r\n                changeItem(index);\r\n              }}\r\n              className={currentItem.value === x.value ? \"On\" : \"\"}\r\n            >\r\n              <Link to={`${x.key}`}>\r\n                <Icon\r\n                  iconUrl={x.icon}\r\n                  coverUrl={x.cover}\r\n                  className=\"Icon\"\r\n                ></Icon>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./header\";\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 40px 0px;\r\n  * {\r\n    transition: all 0.4s;\r\n  }\r\n  & .Box_Wrap {\r\n    padding-top: 64px;\r\n    & .Poster_Wrap {\r\n      width: 8.333%;\r\n      padding: 4px;\r\n    }\r\n    & > div {\r\n      padding-bottom: 40px;\r\n      & > h2 {\r\n        padding-bottom: 40px;\r\n        text-indent: 4px;\r\n        color: #fff;\r\n      }\r\n      & > span {\r\n        display: inline-block;\r\n        width: 20%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1756px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 9.09%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1610px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 10%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1462px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 11%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1315px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 12.5%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1170px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 14.285%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1025px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 16.666%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 876px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 20%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 730px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 25%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 584px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 33.333%;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\napi.interceptors.request.use((config) => {\r\n  config.params = config.params || {};\r\n  config.params[\"api_key\"] = \"4e88b4f1dedb08e14ee3e3dbe7eeb858\";\r\n  config.params[\"language\"] = \"en-US\";\r\n  return config;\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"/search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"video\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"/search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { movieApi } from \"../../api\";\r\n\r\nconst useLogic = (state, setState) => {\r\n  const movieFunction = async () => {\r\n    setState({\r\n      ...state,\r\n      loading: true,\r\n    });\r\n    try {\r\n      const nowPlaying = await movieApi.nowPlaying();\r\n      const upComing = await movieApi.upComing();\r\n      const popular = await movieApi.popular();\r\n      setState({\r\n        ...state,\r\n        nowPlaying: nowPlaying.data.results,\r\n        upComing: upComing.data.results,\r\n        popular: popular.data.results,\r\n        loading: false,\r\n      });\r\n    } catch (e) {\r\n      setState({ ...state, error: \"Can't find Tvs information.\" });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    movieFunction();\r\n  }, []);\r\n};\r\n\r\nexport default useLogic;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.div`\r\n  background: url(${(props) => `${props.bgUrl}`}) center center;\r\n  background-size: cover;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  cursor: pointer;\r\n  * {\r\n    transition: all 0.4s;\r\n  }\r\n  & .Image_Wrap {\r\n    margin-bottom: 5px;\r\n  }\r\n  & .Image {\r\n    position: relative;\r\n    height: 250px;\r\n    border-radius: 4px;\r\n    transition: all 0.4s ease;\r\n    & .Text_Box {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 50px;\r\n      z-index: 2000;\r\n      width: 100%;\r\n      opacity: 0;\r\n      text-align: center;\r\n      transition: all 0.4s ease;\r\n      & .Title {\r\n        margin-bottom: 3px;\r\n        color: #000;\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n        text-shadow: 2px 2px rgba(0, 0, 0, 0.09);\r\n      }\r\n      & .Year {\r\n        padding-top: 15px;\r\n        color: #000;\r\n        font-size: 14px;\r\n        color: #000;\r\n        font-weight: bold;\r\n        text-shadow: 2px 2px rgba(0, 0, 0, 0.09);\r\n      }\r\n    }\r\n    & .Rating {\r\n      position: absolute;\r\n      left: 0;\r\n      bottom: 10px;\r\n      width: 100%;\r\n      opacity: 0;\r\n      padding: 0 8px;\r\n      & .Star {\r\n        position: relative;\r\n        display: block;\r\n        width: 100px;\r\n        height: 24px;\r\n        margin: 0 auto;\r\n        background: url(\"/dongflix/images/star.png\") no-repeat;\r\n      }\r\n      & .Star_Cover {\r\n        position: absolute;\r\n        left: 0px;\r\n        top: 0;\r\n        display: block;\r\n        width: 0;\r\n        height: 24px;\r\n        background: url(\"/dongflix/images/star_cover.png\") no-repeat;\r\n      }\r\n    }\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(255, 255, 255, 0.7);\r\n      opacity: 0;\r\n      transition: all 0.4s ease;\r\n      border-radius: 4px;\r\n    }\r\n    &:hover .Text_Box {\r\n      opacity: 1;\r\n    }\r\n    &:hover .Rating {\r\n      opacity: 1;\r\n    }\r\n    &:hover::before {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper, Image } from \"./styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => {\r\n  var star_rating = rating * 10;\r\n  return (\r\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n      <Wrapper>\r\n        <Grid className=\"Image_Wrap\">\r\n          <Image\r\n            bgUrl={\r\n              imageUrl\r\n                ? `https://image.tmdb.org/t/p/w200${imageUrl}`\r\n                : \"/dongflix/images/notVideo.jpg\"\r\n            }\r\n            className=\"Image\"\r\n          >\r\n            <Grid className=\"Text_Box\">\r\n              <h2 className=\"Title\">\r\n                {title.length > 15 ? `${title.substring(0, 15)}...` : title}\r\n              </h2>\r\n              <p className=\"Year\">{year}</p>\r\n            </Grid>\r\n            <span className=\"Rating\">\r\n              <span className=\"Star\">\r\n                <span\r\n                  className=\"Star_Cover\"\r\n                  style={{ width: `${star_rating}%` }}\r\n                ></span>\r\n              </span>\r\n            </span>\r\n          </Image>\r\n        </Grid>\r\n      </Wrapper>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & > h2 {\r\n    color: #fff;\r\n    font-weight: bold;\r\n    font-size: 14px;\r\n  }\r\n  & > span {\r\n    color: #fff;\r\n    font-size: 14px;\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Wrapper from \"./styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <h2>{title}</h2>\r\n      <Grid container>{children}</Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 99999;\r\n    background: #000;\r\n    & .ProgressBar {\r\n        position: relative;\r\n        width: 100%;\r\n        & > div {\r\n            background: #27ae60;\r\n        }\r\n    }\r\n`;\r\nexport default Wrapper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Wrapper from \"./styles\";\r\nimport { Grid, LinearProgress } from \"@material-ui/core\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Wrapper>\r\n      <>\r\n        <LinearProgress className=\"ProgressBar\" />\r\n        <Grid className=\"Click_Block\"></Grid>\r\n      </>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  * {\r\n    transition: all 0.4s;\r\n  }\r\n  padding: 64px 24px;\r\n  width: 100vw;\r\n  & h2 {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #e74c3c;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport Wrapper from \"./styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nconst Message = ({ text }) => {\r\n  return (\r\n    <Wrapper>\r\n      <h2>{text}</h2>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Wrapper from \"./styles\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport useLogic from \"./viewLogic\";\r\nimport Poster from \"../../pages/poster\";\r\nimport Section from \"../../components/section\";\r\nimport Loader from \"../../components/loader\";\r\nimport Message from \"../message\";\r\n\r\nconst Movie = () => {\r\n  const [state, setState] = useState({\r\n    nowPlaying: [],\r\n    upComing: [],\r\n    popular: [],\r\n    error: null,\r\n    loading: true,\r\n  });\r\n  useLogic(state, setState);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>Movies | Dongflix</title>\r\n      </Helmet>\r\n      {state.loading ? (\r\n        <>\r\n          <Loader />\r\n          <Helmet>\r\n            <title>Movies | Dongflix</title>\r\n          </Helmet>\r\n        </>\r\n      ) : (\r\n        <Grid className=\"Box_Wrap\">\r\n          {state.nowPlaying && state.nowPlaying.length > 0 && (\r\n            <Section title=\"Now Playing\">\r\n              {state.nowPlaying.map((x, index) => {\r\n                return (\r\n                  <Grid item className=\"Poster_Wrap\" key={x.id}>\r\n                    <Poster\r\n                      id={x.id}\r\n                      title={x.original_title}\r\n                      imageUrl={x.poster_path}\r\n                      rating={x.vote_average}\r\n                      year={x.release_date.substring(0, 4)}\r\n                      isMovie={true}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Section>\r\n          )}\r\n          {state.upComing && state.upComing.length > 0 && (\r\n            <Section title=\"UpComing Movies\">\r\n              {state.upComing.map((x, index) => {\r\n                return (\r\n                  <Grid item className=\"Poster_Wrap\" key={x.id}>\r\n                    <Poster\r\n                      id={x.id}\r\n                      title={x.original_title}\r\n                      imageUrl={x.poster_path}\r\n                      rating={x.vote_average}\r\n                      year={x.release_date.substring(0, 4)}\r\n                      isMovie={true}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Section>\r\n          )}\r\n          {state.popular && state.popular.length > 0 && (\r\n            <Section title=\"Popular Movies\">\r\n              {state.popular.map((x, index) => {\r\n                return (\r\n                  <Grid item className=\"Poster_Wrap\" key={x.id}>\r\n                    <Poster\r\n                      id={x.id}\r\n                      title={x.original_title}\r\n                      imageUrl={x.poster_path}\r\n                      rating={x.vote_average}\r\n                      year={x.release_date.substring(0, 4)}\r\n                      isMovie={true}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Section>\r\n          )}\r\n        </Grid>\r\n      )}\r\n      {state.error && <Message text={state.error} />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 40px 0px;\r\n  * {\r\n    transition: all 0.4s;\r\n  }\r\n  & .Box_Wrap {\r\n    padding-top: 64px;\r\n    & .Poster_Wrap {\r\n      width: 8.333%;\r\n      padding: 4px;\r\n    }\r\n    & > div {\r\n      padding-bottom: 40px;\r\n      & > h2 {\r\n        padding-bottom: 40px;\r\n        text-indent: 4px;\r\n        color: #fff;\r\n      }\r\n      & > span {\r\n        display: inline-block;\r\n        width: 20%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1756px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 9.09%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1610px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 10%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1462px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 11%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1315px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 12.5%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1170px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 14.285%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1025px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 16.666%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 876px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 20%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 730px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 25%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 584px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 33.333%;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nconst useLogic = (state, setState) => {\r\n  const tvFunction = async () => {\r\n    setState({\r\n      ...state,\r\n      loading: true,\r\n    });\r\n    try {\r\n      const topRated = await tvApi.topRated();\r\n      const popular = await tvApi.popular();\r\n      const airingToday = await tvApi.airingToday();\r\n      setState({\r\n        ...state,\r\n        topRated: topRated.data.results,\r\n        popular: popular.data.results,\r\n        airingToday: airingToday.data.results,\r\n        loading: false,\r\n      });\r\n    } catch {\r\n      setState({ ...state, error: \"Can't find Tvs information.\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    tvFunction();\r\n  }, []);\r\n};\r\n\r\nexport default useLogic;\r\n","import React, { useState } from \"react\";\r\nimport Wrapper from \"./styles\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport useLogic from \"./viewLogic\";\r\nimport Section from \"../../components/section\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Loader from \"../../components/loader\";\r\nimport Message from \"../message\";\r\nimport Poster from \"../poster\";\r\n\r\nconst Tv = () => {\r\n  const [state, setState] = useState({\r\n    topRated: [],\r\n    popular: [],\r\n    airingToday: [],\r\n    error: null,\r\n    loading: true,\r\n  });\r\n\r\n  useLogic(state, setState);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>Tvs | Dongflix</title>\r\n      </Helmet>\r\n      {state.loading ? (\r\n        <>\r\n          <Loader />\r\n          <Helmet>\r\n            <title>Tvs | Dongflix</title>\r\n          </Helmet>\r\n        </>\r\n      ) : (\r\n        <Grid className=\"Box_Wrap\">\r\n          {state.topRated && state.topRated.length > 0 && (\r\n            <Section title=\"Top Rated\">\r\n              {state.topRated.map((x, index) => {\r\n                return (\r\n                  <Grid item className=\"Poster_Wrap\" key={x.id}>\r\n                    <Poster\r\n                      id={x.id}\r\n                      title={x.original_name}\r\n                      imageUrl={x.poster_path}\r\n                      rating={x.vote_average}\r\n                      year={x.first_air_date.substring(0, 4)}\r\n                      isMovie={false}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Section>\r\n          )}\r\n          {state.popular && state.popular.length > 0 && (\r\n            <Section title=\"Popular TV\">\r\n              {state.popular.map((x, index) => {\r\n                return (\r\n                  <Grid item className=\"Poster_Wrap\" key={x.id}>\r\n                    <Poster\r\n                      id={x.id}\r\n                      title={x.original_name}\r\n                      imageUrl={x.poster_path}\r\n                      rating={x.vote_average}\r\n                      year={x.first_air_date.substring(0, 4)}\r\n                      isMovie={false}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Section>\r\n          )}\r\n          {state.airingToday && state.airingToday.length > 0 && (\r\n            <Section title=\"Airing Today TV\">\r\n              {state.airingToday.map((x, index) => {\r\n                return (\r\n                  <Grid item className=\"Poster_Wrap\" key={x.id}>\r\n                    <Poster\r\n                      id={x.id}\r\n                      title={x.original_name}\r\n                      imageUrl={x.poster_path}\r\n                      rating={x.vote_average}\r\n                      year={x.first_air_date.substring(0, 4)}\r\n                      isMovie={false}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Section>\r\n          )}\r\n        </Grid>\r\n      )}\r\n      {state.error && <Message text={state.error} />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Tv;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 40px 0px;\r\n  * {\r\n    transition: all 0.4s;\r\n  }\r\n  & .Search_Form {\r\n    width: 100%;\r\n    padding-top: 24px;\r\n    & input {\r\n      width: 100%;\r\n      padding: 24px 8px 0;\r\n      font-size: 28px;\r\n      color: rgba(255, 255, 255, 1);\r\n      background: none;\r\n      border: none;\r\n      outline: none;\r\n      &::placeholder {\r\n        color: rgba(255, 255, 255, 0.6);\r\n      }\r\n    }\r\n  }\r\n  & .Box_Wrap {\r\n    padding-top: 40px;\r\n    & .Poster_Wrap {\r\n      width: 8.333%;\r\n      padding: 4px;\r\n    }\r\n    & > div {\r\n      padding-bottom: 40px;\r\n      & > h2 {\r\n        padding-bottom: 40px;\r\n        text-indent: 4px;\r\n        color: #fff;\r\n      }\r\n      & > span {\r\n        display: inline-block;\r\n        width: 20%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1756px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 9.09%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1610px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 10%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1462px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 11%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1315px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 12.5%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1170px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 14.285%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1025px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 16.666%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 876px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 20%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 730px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 25%;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 584px) {\r\n    & .Box_Wrap {\r\n      & .Poster_Wrap {\r\n        width: 33.333%;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { movieApi, tvApi } from \"./../../api\";\r\nimport Wrapper from \"./styles\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Loader from \"./../../components/loader/\";\r\nimport Section from \"./../../components/section/\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Message from \"../message\";\r\nimport Poster from \"../poster\";\r\nconst Search = () => {\r\n  const [state, setState] = useState({\r\n    movieResult: null,\r\n    tvResult: null,\r\n    searchTerm: \"code\",\r\n    error: null,\r\n    loading: false,\r\n  });\r\n\r\n  const searchByTerm = async () => {\r\n    setState({ ...state, loading: true });\r\n    try {\r\n      var movieResults = await movieApi.search(state.searchTerm);\r\n      var tvResults = await tvApi.search(state.searchTerm);\r\n      setState({\r\n        ...state,\r\n        movieResult: [...movieResults.data.results],\r\n        tvResult: [...tvResults.data.results],\r\n        loading: false,\r\n      });\r\n    } catch {\r\n      setState({ ...state, error: \"Can't find results.\" });\r\n    }\r\n  };\r\n\r\n  const submitFunction = (event) => {\r\n    event.preventDefault();\r\n    if (state.searchTerm !== \"\") {\r\n      searchByTerm();\r\n    }\r\n  };\r\n\r\n  const updateFunction = (e) => {\r\n    setState({ ...state, searchTerm: e.target.value });\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>Search | Dongflix</title>\r\n      </Helmet>\r\n      <form onSubmit={submitFunction} className=\"Search_Form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Movies or TV Shows...\"\r\n          onChange={updateFunction}\r\n        />\r\n      </form>\r\n      <Grid className=\"Box_Wrap\">\r\n        {state.loading ? (\r\n          <>\r\n            <Loader />\r\n            <Helmet>\r\n              <title>Search | Dongflix</title>\r\n            </Helmet>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {state.movieResult && state.movieResult.length > 0 && (\r\n              <Section title=\"Movie Results\">\r\n                {state.movieResult.map((x, index) => {\r\n                  return (\r\n                    <Grid item className=\"Poster_Wrap\" key={x.id}>\r\n                      <Poster\r\n                        id={x.id}\r\n                        title={x.original_title}\r\n                        imageUrl={x.poster_path}\r\n                        rating={x.vote_average}\r\n                        year={\r\n                          x &&\r\n                          x.release_date &&\r\n                          x.release_date.substring(0, 4) &&\r\n                          x.release_date.substring(0, 4)\r\n                        }\r\n                        isMovie={false}\r\n                      />\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Section>\r\n            )}\r\n            {state.tvResult && state.tvResult.length > 0 && (\r\n              <Section title=\"TV Results\">\r\n                {state.tvResult.map((x, index) => {\r\n                  return (\r\n                    <Grid item className=\"Poster_Wrap\" key={x.id}>\r\n                      <Poster\r\n                        id={x.id}\r\n                        title={x.original_name}\r\n                        imageUrl={x.poster_path}\r\n                        rating={x.vote_average}\r\n                        // year={x.first_air_date.substring(0, 4)}\r\n                        year={\r\n                          x &&\r\n                          x.first_air_date &&\r\n                          x.first_air_date.substring(0, 4)\r\n                            ? x.first_air_date.substring(0, 4)\r\n                            : \"Not Found\"\r\n                        }\r\n                        isMovie={false}\r\n                      />\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Section>\r\n            )}\r\n          </>\r\n        )}\r\n        {state.error && <Message text={state.error} />}\r\n        {state.movieResult &&\r\n          state.tvResult &&\r\n          state.movieResult.length === 0 &&\r\n          state.tvResult.length === 0 && (\r\n            <Message text={`Nothing found : ${state.searchTerm}`} />\r\n          )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Backdrop = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  background: url(${(props) => `${props.bgUrl}`}) center center;\r\n  background-size: cover;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1500;\r\n  width: 100%;\r\n  height: calc(100vh - 61px);\r\n  & .Detail {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 59px;\r\n    width: 100%;\r\n    height: 100%;\r\n    & .Poster {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      z-index: 1;\r\n      max-width: 600px;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      -webkit-mask-image: -webkit-gradient(\r\n        linear,\r\n        right top,\r\n        left top,\r\n        color-stop(1, rgba(0, 0, 0, 1)),\r\n        color-stop(0.5, rgba(0, 0, 0, 1)),\r\n        color-stop(0, rgba(0, 0, 0, 0))\r\n      );\r\n    }\r\n    & .Text {\r\n      position: absolute;\r\n      left: 36%;\r\n      top: 0;\r\n      height: 100%;\r\n      z-index: 2000;\r\n      width: calc(67% - 40px);\r\n      & > div {\r\n        height: 100%;\r\n        & > div {\r\n          & h2 {\r\n            line-height: 48px;\r\n            font-size: 32px;\r\n            font-weight: bold;\r\n            color: #fff;\r\n            text-shadow: 2px 2px 2px rgba(0, 0, 0, 1);\r\n          }\r\n          & h3 {\r\n            padding: 8px 0 32px;\r\n            & > span {\r\n              display: inline-block;\r\n              margin-right: 24px;\r\n              color: #fff;\r\n              text-shadow: 2px 2px 2px rgba(0, 0, 0, 1);\r\n              &:last-child {\r\n                margin-right: 0;\r\n              }\r\n              &.Rating {\r\n                & .Star {\r\n                  position: relative;\r\n                  display: block;\r\n                  width: 80px;\r\n                  height: 16px;\r\n                  margin: 0 auto;\r\n                  background: url(\"/dongflix/images/star.png\") no-repeat left\r\n                    bottom;\r\n                  background-size: 80px;\r\n                }\r\n                & .Star_Cover {\r\n                  position: absolute;\r\n                  left: 0px;\r\n                  top: 0;\r\n                  display: block;\r\n                  width: 0;\r\n                  height: 16px;\r\n                  background: url(\"/dongflix/images/star_cover_w.png\") no-repeat\r\n                    left bottom;\r\n                  background-size: 80px;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          & .Review {\r\n            display: block;\r\n            width: 150px;\r\n            height: 40px;\r\n            line-height: 36px;\r\n            color: #fff;\r\n            font-size: 12px;\r\n            text-align: center;\r\n            text-shadow: 2px 2px 2px rgba(0, 0, 0, 1);\r\n            border: 2px solid #fff;\r\n            border-radius: 4px;\r\n            background: rgba(255, 255, 255, 0.3);\r\n            cursor: pointer;\r\n            &:hover {\r\n              background: rgba(255, 255, 255, 0.5);\r\n            }\r\n          }\r\n          & p {\r\n            width: 635px;\r\n            line-height: 24px;\r\n            margin-top: 24px;\r\n            color: rgba(255, 255, 255, 0.8);\r\n            text-shadow: 2px 2px 2px rgba(0, 0, 0, 1);\r\n          }\r\n          & .Youtube {\r\n            margin-top: 24px;\r\n            & button {\r\n              width: 32px;\r\n              height: 23px;\r\n              background: url(\"/dongflix/images/icon/youtube_icon.png\")\r\n                no-repeat;\r\n              background-size: 32px;\r\n              border: none;\r\n              outline: none;\r\n              cursor: pointer;\r\n            }\r\n            & .Iframe_Wrap {\r\n              width: 100%;\r\n              margin-top: 32px;\r\n              & iframe {\r\n                width: 100%;\r\n                height: 100%;\r\n                max-height: 0px;\r\n                opacity: 0;\r\n              }\r\n            }\r\n            &.On {\r\n              & .Iframe_Wrap {\r\n                height: 320px;\r\n                & iframe {\r\n                  max-height: 320px;\r\n                  opacity: 1;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    & .Detail {\r\n      & .Poster {\r\n        -webkit-mask-image: none !important;\r\n      }\r\n      & .Text {\r\n        left: 0;\r\n        width: 100%;\r\n        padding: 0 16px;\r\n        text-align: center;\r\n        & > div {\r\n          & > div {\r\n            width: 100%;\r\n            & .Review {\r\n              margin: 0 auto;\r\n            }\r\n            & > p {\r\n              width: 100%;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Wrapper, Backdrop } from './styles';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport Loader from './../../components/loader/';\r\nimport Message from './../../pages/message/';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { movieApi, tvApi } from '../../api';\r\n\r\nconst Detail = (props) => {\r\n   const [state, setState] = useState({\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      rating: null,\r\n   });\r\n   const [youtubeSw, setYoutubeSw] = useState(false);\r\n   const isMovie = props.location.pathname.includes('/movie/');\r\n   const isTv = props.location.pathname.includes('/tv/');\r\n   const history = useHistory();\r\n   const parsedId = parseInt(props.match.params.id);\r\n   if (isNaN(parsedId)) {\r\n      history.push('/');\r\n   }\r\n   useEffect(() => {\r\n      const detailFunction = async () => {\r\n         let result = null;\r\n         setState({ ...state, loading: true });\r\n         try {\r\n            if (isMovie) {\r\n               const request = await movieApi.movieDetail(parsedId);\r\n               result = request.data;\r\n            } else if (isTv) {\r\n               const request = await tvApi.tvDetail(parsedId);\r\n               result = request.data;\r\n            }\r\n            console.log(result);\r\n         } catch {\r\n            setState({ ...state, error: \"Can't find anything.\" });\r\n         }\r\n         setState({\r\n            ...state,\r\n            loading: false,\r\n            result,\r\n            rating: result && result.vote_average && result.vote_average,\r\n         });\r\n      };\r\n      detailFunction();\r\n   }, []);\r\n   return (\r\n      <>\r\n         <Helmet>\r\n            <title>Detail | Dongflix</title>\r\n         </Helmet>\r\n         {state.loading ? (\r\n            <>\r\n               <Loader />\r\n               <Helmet>\r\n                  <title>Detail | Dongflix</title>\r\n               </Helmet>\r\n            </>\r\n         ) : state.error ? (\r\n            <Message text={state.error} />\r\n         ) : (\r\n            <Wrapper>\r\n               <Backdrop\r\n                  bgUrl={\r\n                     state && state.result && state.result.backdrop_path\r\n                        ? `https://image.tmdb.org/t/p/original${state.result.backdrop_path}`\r\n                        : '/dongflix/images/notVideo.jpg'\r\n                  }\r\n               />\r\n               <Grid container className=\"Detail\">\r\n                  <img\r\n                     src={\r\n                        state && state.result && state.result.poster_path\r\n                           ? `https://image.tmdb.org/t/p/original${state.result.poster_path}`\r\n                           : '/dongflix/images/notVideo.jpg'\r\n                     }\r\n                     alt=\"Poster\"\r\n                     className=\"Poster\"\r\n                  />\r\n                  <Grid className=\"Text\">\r\n                     <Grid container alignItems=\"center\">\r\n                        <Grid item>\r\n                           <h2>\r\n                              {state && state.result && state.result.original_title && state.result.original_title}\r\n                              {state && state.result && state.result.original_name && state.result.original_name}\r\n                           </h2>\r\n                           <h3>\r\n                              <span>\r\n                                 {state && state.result && state.result.genres && state.result.genres[0] && state.result.genres[0].name\r\n                                    ? state.result.genres[0].name\r\n                                    : 'Not Found'}\r\n                              </span>\r\n                              {/* <span>\r\n                     {state.result.genres &&\r\n                       state.result.genres.map((x, index) =>\r\n                         index === x.length - 1 ? (\r\n                           <span>{x.name}</span>\r\n                         ) : (\r\n                           <span>{x.name}/</span>\r\n                         )\r\n                       )}\r\n                   </span> */}\r\n                              <span>\r\n                                 {state &&\r\n                                    state.result &&\r\n                                    state.result.release_date &&\r\n                                    state.result.release_date.substring(0, 4) &&\r\n                                    state.result.release_date.substring(0, 4)}\r\n                                 {state &&\r\n                                    state.result &&\r\n                                    state.result.first_air_date &&\r\n                                    state.result.first_air_date.substring(0, 4) &&\r\n                                    state.result.first_air_date.substring(0, 4)}\r\n                              </span>\r\n                              <span>\r\n                                 {state && state.result && state.result.runtime && state.result.runtime}\r\n                                 {state && state.result && state.result.episode_run_time && state.result.episode_run_time}\r\n                                 &nbsp;min\r\n                              </span>\r\n                              <span className=\"Rating\">\r\n                                 {state && state.result && state.result.vote_average && (\r\n                                    <span className=\"Star\">\r\n                                       <span className=\"Star_Cover\" style={{ width: `${state.rating * 10}%` }}></span>\r\n                                    </span>\r\n                                 )}\r\n                              </span>\r\n                           </h3>\r\n                           <a\r\n                              href={state && state.result && state.result.homepage ? `${state.result.homepage}` : '/'}\r\n                              target=\"_blank\"\r\n                              className=\"Review\"\r\n                           >\r\n                              READ REVIEW\r\n                           </a>\r\n                           <p>{state && state.result && state.result.overview && state.result.overview}</p>\r\n                           {state && state.result && state.result.videos && (\r\n                              <Grid className={youtubeSw ? 'Youtube On' : 'Youtube'}>\r\n                                 <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                       setYoutubeSw(!youtubeSw);\r\n                                    }}\r\n                                 ></button>\r\n                                 <Grid className=\"Iframe_Wrap\">\r\n                                    <iframe\r\n                                       title=\"youtube\"\r\n                                       src={\r\n                                          state &&\r\n                                          state.result &&\r\n                                          state.result.videos &&\r\n                                          state.result.videos.results &&\r\n                                          state.result.videos.results[0] &&\r\n                                          state.result.videos.results[0].key &&\r\n                                          `https://www.youtube.com/embed/${state.result.videos.results[0].key}`\r\n                                       }\r\n                                       allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                                    ></iframe>\r\n                                 </Grid>\r\n                              </Grid>\r\n                           )}\r\n                        </Grid>\r\n                     </Grid>\r\n                  </Grid>\r\n               </Grid>\r\n            </Wrapper>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// theme\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\n\r\n// layout\r\nimport Layout from \"./layout\";\r\n// pages\r\nimport Movie from \"./pages/movie\";\r\nimport Tv from \"./pages/tv\";\r\nimport Search from \"./pages/search\";\r\nimport Detail from \"./pages/detail\";\r\n\r\nconst Routes = () => {\r\n  const reducer = useSelector((state) => state.reducer);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <Layout />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Movie}></Route>\r\n          <Route path=\"/movie\" exact component={Movie}></Route>\r\n          <Route path=\"/tv\" exact component={Tv}></Route>\r\n          <Route path=\"/search\" component={Search}></Route>\r\n          <Route path=\"/movie/:id\" component={Detail}></Route>\r\n          <Route path=\"/tv/:id\" component={Detail}></Route>\r\n\r\n          <Redirect from=\"*\" to=\"/movie\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default Routes;\r\n","const reducer = {\r\n  isLoading: false,\r\n};\r\n\r\nexport default (state = reducer, { type, payload, routeName }) => {\r\n  switch (type) {\r\n    case \"SET_IS_LOADING\":\r\n      return { ...state, isLoading: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// redux\r\n\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nconst appReducer = combineReducers({\r\n  reducer,\r\n});\r\n\r\nexport const store = createStore(appReducer);\r\n","import React from \"react\";\r\nimport Routes from \"./Routes\";\r\n\r\n// redux\r\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\r\nimport { store } from \"./redux/redux\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Routes />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n// IE11의 경우\r\nimport \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\n\r\n// css\r\nimport \"./css/reset.css\";\r\nimport \"./css/global.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}